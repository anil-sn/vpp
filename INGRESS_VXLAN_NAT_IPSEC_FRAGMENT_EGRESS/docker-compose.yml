# VPP Multi-Container Chain
# Architecture: INGRESS → VXLAN → NAT → IPSEC → FRAGMENT → GCP

services:
  # Container 1: INGRESS - Receives VXLAN traffic
  chain-ingress:
    build:
      context: .
      dockerfile: src/containers/Dockerfile.base
    container_name: chain-ingress
    hostname: chain-ingress
    privileged: true
    volumes:
      - ./src/containers/ingress:/vpp-config:ro
      - ./src/configs:/vpp-common:ro
      - /tmp/vpp-logs:/var/log/vpp
    networks:
      underlay:
        ipv4_address: 192.168.10.10
      chain-1-2:
        ipv4_address: 10.1.1.1
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - IPC_LOCK
    ulimits:
      memlock:
        soft: -1
        hard: -1
    depends_on: []

  # Container 2: VXLAN - Decapsulates VXLAN packets
  chain-vxlan:
    build:
      context: .
      dockerfile: src/containers/vxlan/Dockerfile.vxlan
    container_name: chain-vxlan
    hostname: chain-vxlan
    privileged: true
    volumes:
      - ./src/containers/vxlan:/vpp-config:ro
      - ./src/configs:/vpp-common:ro
      - /tmp/vpp-logs:/var/log/vpp
    networks:
      chain-1-2:
        ipv4_address: 10.1.1.2
      chain-2-3:
        ipv4_address: 10.1.2.1
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - IPC_LOCK
    ulimits:
      memlock:
        soft: -1
        hard: -1
    depends_on:
      - chain-ingress

  # Container 3: NAT - Network Address Translation
  chain-nat:
    build:
      context: .
      dockerfile: src/containers/Dockerfile.base
    container_name: chain-nat
    hostname: chain-nat
    privileged: true
    volumes:
      - ./src/containers/nat:/vpp-config:ro
      - ./src/configs:/vpp-common:ro
      - /tmp/vpp-logs:/var/log/vpp
    networks:
      chain-2-3:
        ipv4_address: 10.1.2.2
      chain-3-4:
        ipv4_address: 10.1.3.1
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - IPC_LOCK
    ulimits:
      memlock:
        soft: -1
        hard: -1
    depends_on:
      - chain-vxlan

  # Container 4: IPSEC - ESP Encryption
  chain-ipsec:
    build:
      context: .
      dockerfile: src/containers/ipsec/Dockerfile.ipsec
    container_name: chain-ipsec
    hostname: chain-ipsec
    privileged: true
    volumes:
      - ./src/containers/ipsec:/vpp-config:ro
      - ./src/configs:/vpp-common:ro
      - /tmp/vpp-logs:/var/log/vpp
    networks:
      chain-3-4:
        ipv4_address: 10.1.3.2
      chain-4-5:
        ipv4_address: 10.1.4.1
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - IPC_LOCK
    ulimits:
      memlock:
        soft: -1
        hard: -1
    depends_on:
      - chain-nat

  # Container 5: FRAGMENT - IP Fragmentation
  chain-fragment:
    build:
      context: .
      dockerfile: src/containers/fragment/Dockerfile.fragment
    hostname: chain-fragment
    privileged: true
    volumes:
      - ./src/containers/fragment:/vpp-config:ro
      - ./src/configs:/vpp-common:ro
      - /tmp/vpp-logs:/var/log/vpp
    networks:
      chain-4-5:
        ipv4_address: 10.1.4.2
      underlay:
        ipv4_address: 192.168.10.20
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - IPC_LOCK
    ulimits:
      memlock:
        soft: -1
        hard: -1
    depends_on:
      - chain-ipsec

  # Container 6: GCP - Destination Endpoint
  chain-gcp:
    build:
      context: .
      dockerfile: src/containers/Dockerfile.base
    container_name: chain-gcp
    hostname: chain-gcp
    privileged: true
    volumes:
      - ./src/containers/gcp:/vpp-config:ro
      - ./src/configs:/vpp-common:ro
      - /tmp/vpp-logs:/var/log/vpp
      - /tmp/packet-captures:/tmp
    networks:
      underlay:
        ipv4_address: 192.168.10.30
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - IPC_LOCK
    ulimits:
      memlock:
        soft: -1
        hard: -1
    depends_on:
      - chain-fragment

networks:
  # Main underlay network (192.168.1.0/24)
  underlay:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.1

  # Inter-container chain networks  
  chain-1-2:  # Ingress → VXLAN (10.1.1.0/24)
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.1.0/24

  chain-2-3:  # VXLAN → NAT (10.1.2.0/24)
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.2.0/24

  chain-3-4:  # NAT → IPsec (10.1.3.0/24)
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.3.0/24

  chain-4-5:  # IPsec → Fragment (10.1.4.0/24)
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.4.0/24

volumes:
  vpp-logs:
    driver: local
  packet-captures:
    driver: local