# VPP Multi-Container Chain - Base Container
FROM ubuntu:20.04

# Prevent interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive

# Install VPP and essential tools
RUN apt-get update && \
    apt-get install -y \
    curl \
    gnupg \
    lsb-release \
    software-properties-common \
    && curl -fsSL https://packagecloud.io/fdio/release/gpgkey | apt-key add - \
    && add-apt-repository "deb [arch=amd64] https://packagecloud.io/fdio/release/ubuntu $(lsb_release -sc) main" \
    && apt-get update \
    && apt-get install -y \
    vpp \
    vpp-plugin-core \
    vpp-plugin-dpdk \
    python3-vpp-api \
    vpp-dev \
    && apt-get install -y \
    python3-scapy \
    tcpdump \
    tshark \
    wireshark \
    ngrep \
    net-tools \
    iproute2 \
    dnsutils \
    nmap \
    traceroute \
    mtr \
    iperf3 \
    netcat \
    telnet \
    jq \
    wget \
    iputils-ping \
    curl \
    htop \
    gnupg2 \
    ca-certificates \
    tree \
    vim \
    libcurl4-openssl-dev \
    --no-install-recommends \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create VPP directories
RUN mkdir -p /etc/vpp /var/log/vpp /run/vpp /vpp-config \
    && chmod 755 /etc/vpp /var/log/vpp /run/vpp

# Create VPP systemd service directory
RUN mkdir -p /etc/systemd/system

# Set working directory
WORKDIR /vpp-config

# Expose VPP management ports
EXPOSE 5002

# Keep container running and allow manual startup
CMD ["tail", "-f", "/dev/null"]