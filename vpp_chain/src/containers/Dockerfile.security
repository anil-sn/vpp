# VPP Multi-Container Chain - Security Processor Container (NAT + IPsec + Fragment)
FROM ubuntu:20.04

# Prevent interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive

# Install VPP and essential tools
RUN apt-get update && \
    apt-get install -y \
    curl \
    gnupg \
    lsb-release \
    software-properties-common \
    && curl -fsSL https://packagecloud.io/fdio/release/gpgkey | apt-key add - \
    && add-apt-repository "deb [arch=amd64] https://packagecloud.io/fdio/release/ubuntu $(lsb_release -sc) main" \
    && apt-get update \
    && apt-get install -y \
    vpp=24.10-release \
    vpp-plugin-core=24.10-release \
    vpp-plugin-dpdk=24.10-release \
    python3-vpp-api=24.10-release \
    vpp-dev=24.10-release \
    && apt-get install -y \
    python3-scapy \
    tcpdump \
    net-tools \
    iproute2 \
    jq \
    iputils-ping \
    curl \
    vim \
    --no-install-recommends \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create VPP directories
RUN mkdir -p /etc/vpp /var/log/vpp /run/vpp /vpp-config \
    && chmod 755 /etc/vpp /var/log/vpp /run/vpp

# Copy VPP configuration and common startup script
COPY src/containers/security-config.sh /vpp-config/
COPY src/configs/start-vpp.sh /vpp-common/start-vpp.sh
COPY src/configs/startup.conf /vpp-common/startup.conf
RUN chmod +x /vpp-config/security-config.sh && chmod +x /vpp-common/start-vpp.sh && mkdir -p /vpp-common

# Create VPP startup configuration for security processing
RUN echo "unix {" > /etc/vpp/startup.conf && \
    echo "  nodaemon" >> /etc/vpp/startup.conf && \
    echo "  log /var/log/vpp/vpp.log" >> /etc/vpp/startup.conf && \
    echo "  full-coredump" >> /etc/vpp/startup.conf && \
    echo "  cli-listen /run/vpp/cli.sock" >> /etc/vpp/startup.conf && \
    echo "  gid vpp" >> /etc/vpp/startup.conf && \
    echo "}" >> /etc/vpp/startup.conf && \
    echo "api-trace {" >> /etc/vpp/startup.conf && \
    echo "  on" >> /etc/vpp/startup.conf && \
    echo "}" >> /etc/vpp/startup.conf && \
    echo "api-segment {" >> /etc/vpp/startup.conf && \
    echo "  gid vpp" >> /etc/vpp/startup.conf && \
    echo "}" >> /etc/vpp/startup.conf && \
    echo "socksvr {" >> /etc/vpp/startup.conf && \
    echo "  default" >> /etc/vpp/startup.conf && \
    echo "}" >> /etc/vpp/startup.conf && \
    echo "memory {" >> /etc/vpp/startup.conf && \
    echo "  main-heap-size 512M" >> /etc/vpp/startup.conf && \
    echo "  main-heap-page-size 2M" >> /etc/vpp/startup.conf && \
    echo "}" >> /etc/vpp/startup.conf && \
    echo "buffers {" >> /etc/vpp/startup.conf && \
    echo "  buffers-per-numa 32768" >> /etc/vpp/startup.conf && \
    echo "}" >> /etc/vpp/startup.conf && \
    echo "plugins {" >> /etc/vpp/startup.conf && \
    echo "  plugin af_packet_plugin.so { enable }" >> /etc/vpp/startup.conf && \
    echo "  plugin nat_plugin.so { enable }" >> /etc/vpp/startup.conf && \
    echo "  plugin ipsec_plugin.so { enable }" >> /etc/vpp/startup.conf && \
    echo "  plugin crypto_native_plugin.so { enable }" >> /etc/vpp/startup.conf && \
    echo "  plugin crypto_ipsecmb_plugin.so { enable }" >> /etc/vpp/startup.conf && \
    echo "  plugin ipip_plugin.so { enable }" >> /etc/vpp/startup.conf && \
    echo "}"  >> /etc/vpp/startup.conf

# Set working directory
WORKDIR /vpp-config

# Expose VPP management ports
EXPOSE 5002

# Keep container running and allow manual startup
CMD ["tail", "-f", "/dev/null"]